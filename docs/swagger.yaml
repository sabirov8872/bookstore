swagger: "2.0"
info:
  title: Bookstore
  description: Bookstore
  version: 1.0.0
host: localhost:8080
schemes:
  - 'http'
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
definitions:
  Author:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  Book:
    properties:
      author:
        $ref: '#/definitions/Author'
      createdAt:
        type: string
      description:
        type: string
      filename:
        type: string
      genre:
        $ref: '#/definitions/Genre'
      id:
        type: integer
      isbn:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  CreateAuthorRequest:
    properties:
      name:
        type: string
    type: object
  CreateAuthorResponse:
    properties:
      authorId:
        type: integer
    type: object
  CreateBookRequest:
    properties:
      authorId:
        type: integer
      description:
        type: string
      genreId:
        type: integer
      isbn:
        type: string
      title:
        type: string
    type: object
  CreateBookResponse:
    properties:
      bookId:
        type: integer
    type: object
  CreateGenreRequest:
    properties:
      name:
        type: string
    type: object
  CreateGenreResponse:
    properties:
      genreId:
        type: integer
    type: object
  CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  CreateUserResponse:
    properties:
      userId:
        type: integer
    type: object
  ErrorResponse:
    properties:
      message:
        type: string
    type: object
  Genre:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  GetUserByUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  GetUserByUserResponse:
    properties:
      token:
        type: string
      userId:
        type: integer
    type: object
  ListAuthorResponse:
    properties:
      authorsCount:
        type: integer
      items:
        items:
          $ref: '#/definitions/Author'
        type: array
    type: object
  ListBookResponse:
    properties:
      booksCount:
        type: integer
      items:
        items:
          $ref: '#/definitions/Book'
        type: array
    type: object
  ListGenreResponse:
    properties:
      genresCount:
        type: integer
      items:
        items:
          $ref: '#/definitions/Genre'
        type: array
    type: object
  ListUserResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/User'
        type: array
      usersCount:
        type: integer
    type: object
  UpdateAuthorRequest:
    properties:
      name:
        type: string
    type: object
  UpdateBookRequest:
    properties:
      authorId:
        type: integer
      description:
        type: string
      genreId:
        type: integer
      isbn:
        type: string
      title:
        type: string
    type: object
  UpdateGenreRequest:
    properties:
      name:
        type: string
    type: object
  UpdateUserByIdRequest:
    properties:
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userRole:
        type: string
      username:
        type: string
    type: object
  UpdateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      userRole:
        type: string
      username:
        type: string
    type: object
paths:
  /authors:
    get:
      tags:
        - 'authors'
      summary: Get all authors
      description: For admins, users and guests
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListAuthorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - 'authors'
      summary: Create a new author
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: body
          name: input
          description: Author data
          required: true
          schema:
            $ref: '#/definitions/CreateAuthorRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateAuthorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /authors/{id}:
    delete:
      tags:
        - 'authors'
      summary: Delete author by id
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: path
          name: id
          description: Author ID
          required: true
          type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
    get:
      tags:
        - 'authors'
      summary: Get author by id
      description: For admins, users and guests
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: path
          name: id
          description: Author ID
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - 'authors'
      summary: Update author by id
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: Author ID
          in: path
          name: id
          required: true
          type: integer
        - description: Author data
          in: body
          name: input
          required: true
          schema:
            $ref: '#/definitions/UpdateAuthorRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /books:
    get:
      tags:
        - 'books'
      summary: Get all books
      description: For admins, users and guests
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: author_id, genre_id
          in: query
          name: filter
          type: string
        - description: id
          in: query
          name: id
          type: integer
        - description: title, created_at, updated_at
          in: query
          name: sort_by
          type: string
        - description: desc, asc
          in: query
          name: order_by
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListBookResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - 'books'
      summary: Create a new book
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: Book data
          in: body
          name: input
          required: true
          schema:
            $ref: '#/definitions/CreateBookRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateBookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /books/{id}:
    delete:
      tags:
        - 'books'
      summary: Delete book by id
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: Book id
          in: path
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
    get:
      tags:
        - 'books'
      summary: Get book by id
      description: For admins, users and guests
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: Book id
          in: path
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - 'books'
      summary: Update book by id
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: Book ID
          in: path
          name: id
          required: true
          type: integer
        - description: Book data
          in: body
          name: input
          required: true
          schema:
            $ref: '#/definitions/UpdateBookRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /files/{id}:
    get:
      tags:
        - 'files'
      summary: Get book file by book id
      description: For admins, users and guests
      consumes:
        - 'application/json'
      produces:
        - 'application/pdf'
      parameters:
        - description: Book id
          in: path
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: Book file
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - 'files'
      summary: Upload book file by book id
      description: For admins
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - description: Book id
          in: path
          name: id
          required: true
          type: integer
        - description: Book pdf file
          in: formData
          name: file
          required: true
          type: file
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /genres:
    get:
      tags:
        - 'genres'
      summary: Get all genres
      description: For admins, users and guests
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListGenreResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - 'genres'
      summary: Create a new genre
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: Genre data
          in: body
          name: input
          required: true
          schema:
            $ref: '#/definitions/CreateGenreRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateGenreResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /genres/{id}:
    delete:
      tags:
        - 'genres'
      summary: Delete genre by id
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: Genre ID
          in: path
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - 'genres'
      summary: Update genre by id
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: Genre ID
          in: path
          name: id
          required: true
          type: integer
        - description: Genre data
          in: body
          name: input
          required: true
          schema:
            $ref: '#/definitions/UpdateGenreRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /login:
    post:
      tags:
        - 'auth'
      summary: User verification
      description: For users and admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: User data
          in: body
          name: input
          required: true
          schema:
            $ref: '#/definitions/GetUserByUserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetUserByUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /signup:
    post:
      tags:
        - 'auth'
      summary: Registration
      description: For users
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - description: User data
          in: body
          name: input
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users:
    get:
      tags:
        - 'users'
      summary: Get all users
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListUserResponse'
        "400":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - 'users'
      summary: Update user
      description: For users and admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: body
          description: User data
          name: input
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /users/{id}:
    delete:
      tags:
        - 'users'
      summary: Delete user by id
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: path
          description: User ID
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
    get:
      tags:
        - 'users'
      summary: Get user by id
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: path
          description: User id
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - 'users'
      summary: Update user by id
      description: For admins
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: path
          description: User ID
          name: id
          required: true
          type: integer
        - in: body
          description: User data
          name: input
          required: true
          schema:
            $ref: '#/definitions/UpdateUserByIdRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ApiKeyAuth: []
